/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *//* ApiError - error thrown by api includes error code to return when error is thrown in API       *//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */'use strict';/** * Extend Error with ApiError which includes message and (http) status. * * @param message Message associated with error * @param code  error code * @constructor * * qv stackoverflow.com/questions/1382107#answer-8460753 * also: developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/proto */function ApiError(code, message) {    if (!(this instanceof ApiError)) return new ApiError(code, message);    Object.setPrototypeOf(this.constructor.prototype, Error.prototype);    Error.captureStackTrace(this, this.constructor);    this.name = this.constructor.name;    this.code = code;    this.message = message;}module.exports = ApiError;